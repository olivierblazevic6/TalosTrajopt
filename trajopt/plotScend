trajopt_examples/src/glass_up_right_plan.cpp:  plotter->plotScene();
trajopt_examples/src/glass_up_right_plan.cpp:    plotter->clear();
trajopt_examples/src/car_seat_demo.cpp:  plotter->plotScene();
trajopt_examples/src/car_seat_demo.cpp:  plotter->plotScene();
trajopt_examples/src/car_seat_demo.cpp:    plotter->clear();
trajopt_examples/src/car_seat_demo.cpp:  plotter->plotTrajectory(prob->GetKin()->getJointNames(), getTraj(pick1_opt.x(), prob->GetVars()));
trajopt_examples/src/car_seat_demo.cpp:    plotter->clear();
trajopt_examples/src/car_seat_demo.cpp:  plotter->plotTrajectory(prob->GetKin()->getJointNames(), getTraj(place1_opt.x(), prob->GetVars()));
trajopt_examples/src/basic_cartesian_plan.cpp:  plotter->plotScene();
trajopt_examples/src/basic_cartesian_plan.cpp:    plotter->clear();
trajopt_examples/src/puzzle_piece_auxillary_axes_plan.cpp:  plotter->plotScene();
trajopt_examples/src/puzzle_piece_auxillary_axes_plan.cpp:    plotter->clear();
trajopt_examples/src/puzzle_piece_auxillary_axes_plan.cpp:  plotter->plotTrajectory(prob->GetKin()->getJointNames(), getTraj(opt.x(), prob->GetVars()));
trajopt_examples/src/puzzle_piece_plan.cpp:  plotter->plotScene();
trajopt_examples/src/puzzle_piece_plan.cpp:    plotter->clear();
trajopt_examples/src/puzzle_piece_plan.cpp:  plotter->plotTrajectory(prob->GetKin()->getJointNames(), getTraj(opt.x(), prob->GetVars()));
trajopt_moveit_examples/src/glass_up_right_plan.cpp:    plotter->clear();
trajopt_moveit_examples/src/basic_cartesian_plan.cpp:    plotter->clear();
trajopt_moveit_examples/src/puzzle_piece_plan.cpp:    plotter->clear();
trajopt_moveit_examples/src/puzzle_piece_plan.cpp:  plotter->plotTrajectory(joint_names, getTraj(opt.x(), prob->GetVars()));
trajopt/src/kinematic_terms.cpp:  plotter->plotAxis(cur_pose, 0.05);
trajopt/src/kinematic_terms.cpp:  plotter->plotAxis(target_pose, 0.05);
trajopt/src/kinematic_terms.cpp:  plotter->plotArrow(cur_pose.translation(), target_pose.translation(), Eigen::Vector4d(1, 0, 1, 1), 0.005);
trajopt/src/kinematic_terms.cpp:  plotter->plotAxis(cur_pose, 0.05);
trajopt/src/kinematic_terms.cpp:  plotter->plotAxis(target, 0.05);
trajopt/src/kinematic_terms.cpp:  plotter->plotArrow(cur_pose.translation(), target.translation(), Eigen::Vector4d(1, 0, 1, 1), 0.005);
trajopt/src/collision_terms.cpp:      plotter->plotArrow(res.nearest_points[0], pose2 * local_link_point, Eigen::Vector4d(1, 1, 1, 1), 0.005);
trajopt/src/collision_terms.cpp:  plotter->plotContactResults(link_names, dist_results, safety_distance);
trajopt/src/collision_terms.cpp:      plotter->plotArrow(res.nearest_points[0], pose2 * local_link_point, Eigen::Vector4d(1, 1, 1, 1), 0.005);
trajopt/src/collision_terms.cpp:  plotter->plotContactResults(link_names, dist_results, safety_distance);
trajopt/src/plot_callback.cpp:  plotter->clear();
trajopt/src/plot_callback.cpp:  plotter->plotTrajectory(joint_names, getTraj(results.x, vars));
trajopt/src/plot_callback.cpp:  plotter->waitForInput();
